#  SuperTux
#  Copyright (C) 2021-2021 Sergii Pylypenko <x.pelya.x@gmail.com>
#
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of the GNU General Public License
#  as published by the Free Software Foundation; either version 3
#  of the License, or (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

name: Android
on:
  workflow_dispatch:
    inputs: {}
    ref: master
    repository: https://github.com/SuperTux/supertux
    sender: SuperTux
    workflow: Android
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request: {}

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true

      - name: Prepare SDL Android project
        run: |
          ./tools/clone_dependency.sh libsdl-org/SDL release-2.26.5
          mv ./SDL/android-project/ ./build.android

      - name: Clone dependencies
        working-directory: build.android/app/jni
        run: |
          ../../../tools/clone_dependency.sh libsdl-org/SDL_image release-2.20.2
          ../../../tools/clone_dependency.sh SuperTux/SDL_ttf supertux-changes-2018-09-13
          ../../../tools/clone_dependency.sh boostorg/boost boost-1.82.0
          ../../../tools/clone_dependency.sh curl/curl curl-8_0_1
          ../../../tools/clone_dependency.sh fmtlib/fmt 9.1.0
          ../../../tools/clone_dependency.sh g-truc/glm 0.9.9.8
          ../../../tools/clone_dependency.sh xiph/vorbis v1.3.7
          ../../../tools/clone_dependency.sh kcat/openal-soft 1.23.1
          #TODO: i have to take a look into opengl later
          #TODO: i also have to take a look at libpartiozip
          ../../../tools/clone_dependency.sh SuperTux/physfs release-2.0.3
          ../../../tools/clone_dependency.sh driedfruit/SDL_SavePNG master
          ../../../tools/clone_dependency.sh SuperTux/sexp-cpp master
          ../../../tools/clone_dependency.sh albertodemichelis/squirrel v3.2
          ../../../tools/clone_dependency.sh SuperTux/tinygettext tinygettext-supertux

      - name: Copy Android CMake script
        run: |
          cp -f ./mk/cmake/Android.cmake ./build.android/app/jni/CMakeLists.txt

      - name: Set architectures list and version
        working-directory: build.android
        run: |
          VERSION_NAME="$(git -C .. describe --tags | cut -f 1,2 -d "-" | sed 's/[^0-9\\.\\-]//g' | sed 's/-/./g')"
          VERSION_CODE="$(printf "%02d%02d%02d%04d\n" "$(echo $VERSION_NAME | cut -d . -f 1)" "$(echo $VERSION_NAME | cut -d . -f 2)" "$(echo $VERSION_NAME | cut -d . -f 3)" "$(echo $VERSION_NAME | cut -d . -f 4)")"
          echo "Version name: $VERSION_NAME"
          echo "Version code: $VERSION_CODE"
          sed -i "s/MultiABI=.*/MultiABI='${ARCH_LIST}'/g" project/jni/application/supertux/AndroidAppSettings.cfg
          sed -i "s/AppVersionName.*/AppVersionName="$VERSION_NAME"/g" project/jni/application/supertux/AndroidAppSettings.cfg
          sed -i "s/AppVersionCode.*/AppVersionCode=$VERSION_CODE/g" project/jni/application/supertux/AndroidAppSettings.cfg

      - name: Copy precompiled libraries from cache
        uses: actions/cache@v2
        id: cache
        with:
          # The same SDL revision will produce the same libraries
          key: ${{env.SDL_ANDROID_REV}}
          path: |
            build.android/project/jni/boost/include
            build.android/project/jni/boost/lib
            build.android/project/jni/iconv/include
            build.android/project/jni/iconv/lib
            build.android/project/jni/icuuc/include
            build.android/project/jni/icuuc/lib
            build.android/project/jni/openssl/include
            build.android/project/jni/openssl/lib

      - name: Touch cached file timestamps
        if: steps.cache.outputs.cache-hit == 'true'
        working-directory: build.android
        run: >
          touch
          project/jni/boost/lib/*/*
          project/jni/iconv/lib/*/*
          project/jni/icuuc/lib/*/*
          project/jni/openssl/lib/*/*
          || true

      - name: Build Boost, ICU, and OpenSSL
        working-directory: build.android
        run: |
          export PATH=$ANDROID_NDK_LATEST_HOME:$PATH
          ./changeAppSettings.sh

      - name: Set up Gradle and Android SDK licenses
        working-directory: build.android/project
        run: |
          yes | sudo $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses
          ./gradlew assembleRelease || true
          yes | sudo $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses --sdk_root=`pwd`
          mkdir -p $HOME/.android
          keytool -genkey -v -keystore $HOME/.android/debug.keystore -storepass android -alias androiddebugkey -keypass android -keyalg RSA -keysize 2048 -validity 10000 -dname "CN=Debug, OU=Debug, O=Debug, L=Debug, ST=Debug, C=Debug"
          echo "sdk.dir=$ANDROID_SDK_ROOT" > local.properties
          echo "proguard.config=proguard.cfg;proguard-local.cfg" >> local.properties

      - name: Build
        working-directory: build.android
        run: |
          export PATH=$ANDROID_NDK_LATEST_HOME:$ANDROID_SDK_ROOT/build-tools/31.0.0:$PATH
          ./build.sh

      - name: Package
        working-directory: build.android
        run: |
          export PATH=$ANDROID_NDK_LATEST_HOME:$ANDROID_SDK_ROOT/build-tools/31.0.0:$PATH
          mkdir -p upload/apk/ upload/aab/
          cd project
          ./gradlew bundleReleaseWithDebugInfo
          mv app/build/outputs/bundle/releaseWithDebugInfo/app-releaseWithDebugInfo.aab ../upload/aab/SuperTux.aab
          cd jni/application/supertux
          ./create-apk-with-data.sh
          cd ../../../..
          mv SuperTux*.apk upload/apk/
          cd ..

      - uses: actions/upload-artifact@v2
        with:
          name: "SuperTux-android-aab"
          path: build.android/upload/aab
          if-no-files-found: error

      - uses: actions/upload-artifact@v2
        with:
          name: "SuperTux-android-apk"
          path: build.android/upload/apk
          if-no-files-found: error
